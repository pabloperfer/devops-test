{{- /*
This template defines a Kubernetes Deployment resource for the sample Node.js application.
The Deployment manages the desired state of the application's Pods, ensuring
a specified number of replicas are running and handling updates.
It uses helper templates from `_helpers.tpl` for naming and labels,
and retrieves configuration from `values.yaml`.
*/ -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "sample-node-app.fullname" . }}        # Sets the Deployment name using the generated full name (e.g., sample-node-app-prod).
  labels:
    {{- include "sample-node-app.labels" . | nindent 4 }} # # Applies standard labels for Kubernetes resource identification.
spec:
  replicas: {{ .Values.replicaCount }}                     # Configures the number of desired Pod replicas, defined in values.yaml.
  selector:
    matchLabels:
      {{- include "sample-node-app.selectorLabels" . | nindent 6 }}  # Defines the labels that this Deployment will use to find and manage its Pods.
  template:
    metadata:
      labels:
        {{- include "sample-node-app.selectorLabels" . | nindent 8 }} # Labels applied to the Pods created by this Deployment, matching the selector.
    spec:
      {{- with .Values.imagePullSecrets }}                # Optionally allows specifying image pull secrets for private container registries.
      imagePullSecrets:
        {{- toYaml . | nindent 8 }} 
      {{- end }}

      containers:
        - name: {{ include "sample-node-app.name" . }}    # Sets the container name, typically the chart's base name.
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}" # Defines the container image and tag. The tag defaults to the chart's AppVersion if not specified.
          imagePullPolicy: {{ .Values.image.pullPolicy }} # Specifies when to pull the image (e.g., Always, IfNotPresent, Never).

          ports:
            - name: http
              containerPort: {{ .Values.service.port }}    # The port on which the application inside the container listens. This port is exposed by the Service.

          # Environment variables for the application
          env:
            - name: PORT
              value: "{{ .Values.env.PORT | default "3000" }}" # Sets the PORT environment variable, defaulting to 3000 if not provided.

          # Injects the `app_env` variable from the ConfigMap.
            - name: APP_ENV
              valueFrom:
                configMapKeyRef:
                  name: {{ include "sample-node-app.fullname" . }}-config
                  key: app_env
         
          # Injects all key-value pairs from a Kubernetes Secret as environment variables.
          envFrom:
            - secretRef:
                name: {{ include "sample-node-app.fullname" . }}-secret    # References the Secret generated by this chart.

          {{- with .Values.resources }}     # Configures CPU and memory resource requests and limits for the container.
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with .Values.livenessProbe }}   # Defines a liveness probe to determine if the container is healthy. If it fails, Kubernetes restarts the container.
          livenessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}

          {{- with .Values.readinessProbe }}  # Defines a readiness probe to determine if the container is ready to serve traffic. If it fails, Kubernetes stops sending traffic to the pod.
          readinessProbe:
            {{- toYaml . | nindent 12 }}
          {{- end }}

      {{- with .Values.nodeSelector }}  # Constrains Pods to run on nodes with specific labels.
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.tolerations }}   # Allows Pods to be scheduled on nodes with matching taints.
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      {{- with .Values.affinity }}   # Defines advanced Pod scheduling rules based on node or other Pod labels.
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}